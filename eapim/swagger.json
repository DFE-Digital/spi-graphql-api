{
  "swagger": "2.0",
  "info": {
    "title": "SPI GraphQL API",
    "version": "2.0",
    "description": "SPI GraphQL API: Query entry point to the SPI solution"
  },
  "host": "__function_app_host__",
  "paths": {
    "/graphql": {
      "get": {
        "description": "Get schema or run query on get",
        "operationId": "get-query",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token authentication.",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "X-External-Request-Id",
            "description": "An optional external request id. Used in logging.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The squashing was a success.",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "There was a problem with the request - and this could be different things depending on the context. See body of response for more detail.",
            "schema": {
              "$ref": "#/definitions/http-error-body"
            }
          }
        }
      },
      "post": {
        "description": "Send query",
        "operationId": "json-query",
        "parameters": [
          {
            "in": "body",
            "name": "Graph Request",
            "description": "A GraphQL JSON request containing at minimum the query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/graph-json-request"
            }
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token authentication.",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "X-External-Request-Id",
            "description": "An optional external request id. Used in logging.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The squashing was a success.",
            "schema": {
              "type": "object"
            }
          },
          "500": {
            "description": "There was a problem with the request - and this could be different things depending on the context. See body of response for more detail.",
            "schema": {
              "$ref": "#/definitions/http-error-body"
            }
          }
        }
      }
    },
    "/HeartBeat": {
      "get": {
        "description": "Standard diagnostics method, used to test the health of the facade's underlying system.",
        "operationId": "heart-beat",
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Bearer token authentication.",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "The standard/only response from the method."
          }
        }
      }
    }
  },
  "definitions": {
    "http-error-body": {
      "type": "object",
      "properties": {
        "errorIdentifier": {
          "type": "string",
          "description": "An error identifier.",
          "example": "SPI-ESQ-4"
        },
        "message": {
          "type": "string",
          "description": "A message describing the error.",
          "example": "Unable to serve any requests - all adapters are unavailable."
        },
        "statusCode": {
          "type": "integer",
          "description": "The status code thrown with the error.",
          "example": 424
        }
      }
    },
    "graph-json-request": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "The GraphQL query to execute",
          "example": "{learningProviders(name:'name'){name urn ukprn}}"
        }
      },
      "required": ["query"]
    }
  }
}